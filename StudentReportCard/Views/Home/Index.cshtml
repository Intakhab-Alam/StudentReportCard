@model StudentReportCard.ViewModel.StudentMasterViewModel
@{
    ViewBag.Title = "Home Page";
}
<style>
    th {
        background-color: #f5f5f5;
    }
    th, td {
        text-align: center;
    }
    tr:hover {
        background-color: #f5f5f5;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {

        LoadStudent();

        $("#btnAddToList").click(function () {
            AddMarksIntoTable();
        });

        $("#btnSave").click(function () {
            AddStudentMarksIntoDatabase();
        });
    });

    function LoadStudent() {
        var tableRow = "";
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            url: '/Home/LoadStudent',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var tableStudent = $("#tableLoadStudent");
                var tableRow = "";
                $.each(data,
                    function (index, value) {
                        tableRow += '<tr><td>' +
                            value.Name +
                            '</td><td>' +
                            value.ExamName +
                            '</td><td>' +
                            value.ClassName +
                            '</td><td>' +
                            value.RollNumber +
                            '</td><td>' +
                            "<input type='button' value='Display Marks' name='details' onclick=StudentMarks(" +
                            value.StudentId +
                            ") class='btn btn-primary' /></td></tr>"
                    });
                
                $("#tableLoadStudent").find("tr:gt(0)").remove();
                $("#tableLoadStudent").append(tableRow);
            },
            error: function () {
                alert("There is some problem to process your request.");
            }
        });
    }

    function StudentMarks(studentId) {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'HTML',
            url: '/Home/GetStudentMarks',
            contentType: 'application/json; charset=utf-8',
            data: { studentId: studentId },
            success: function (data) {
                $("#divStudentMarks").html(data);
            },
            error: function () {
                alert("There is some problem to process your request.");
            }
        });
    };

    function AddMarksIntoTable() {

        if ($("#ddSubject option:selected").text() === "") {
            alert("Please select subject.");
            $("#ddSubject").focus();
            return;
        }
        if ($("#txtTotalMarks").val() === "") {
            alert("Please enter total marks.");
            $("#txtTotalMarks").focus();
            return;
        }
        if ($("#txtMarksObtained").val() === "") {
            alert("Please enter marks obtained.");
            $("#txtMarksObtained").focus();
            return;
        }
        if ( parseInt($("#txtTotalMarks").val()) < parseInt($("#txtMarksObtained").val()) ) {
            alert("Marks obtained should be less than or equal to total marks.");
            $("#txtMarksObtained").focus();
            return;
        }

        var subjectId = $("#ddSubject").val();
        var tableMarks = $("#tableStudentMarks").find("tr:gt(0)");
        var isReturn = false;

        $.each(tableMarks,
            function () {
                var listedSubjectId = $(this).find("td:eq(0)").text();
                var listedSubject = $(this).find("td:eq(1)").text();
                if (listedSubjectId === subjectId) {
                    alert("Subject : " + listedSubject + " is already listed.");
                    isReturn = true;
                    return;
                }
            });

        if (isReturn === true) {
            return false;
        }

        var marksTable = $("#tableStudentMarks");
        var subjectId = $("#ddSubject").val();
        var subject = $("#ddSubject option:selected").text();
        var totalMarks = $("#txtTotalMarks").val();
        var marksObtained = $("#txtMarksObtained").val();
        var percentage = ((marksObtained / totalMarks) * 100).toFixed(2);

        var rowValue = "<tr><td>" + subjectId + "</td><td>" + subject + "</td><td>" + totalMarks +
            "</td><td>" + marksObtained +
            "</td><td>" + percentage +
            "</td><td>" + "<input style='margin:2px;' type='button' class='btn btn-danger' value='Remove' name='remove' onclick='removeMarks(this)' /></td></tr>";
        $("#tableStudentMarks").append(rowValue);
        ResetMarksList();
    };

    function removeMarks(rowValue) {
        $(rowValue).closest('tr').remove();
    }

    function ResetMarksDetailsAfterSaving() {
        $("#txtName").val('');
        $("#ddExam").val(1);
        $("#txtClassName").val('');
        $("#txtRollNumber").val('');
        $("#tableStudentMarks").find("tr:gt(0)").remove();
        ResetMarksList();
        $("#txtTotalMarks").val('');
        $("#txtName").focus();
    }

    function ResetMarksList() {
        $("#ddSubject").val(1);

        $("#txtMarksObtained").val('');
    }

    function AddStudentMarksIntoDatabase() {
        var objStudentViewModel = {};
        var listOfStudentMarks = [];

        var tableMarks = $("#tableStudentMarks").find("tr:gt(0)");
        $.each(tableMarks,
            function () {
                var StudentMarks = {};
                StudentMarks.SubjectId = $(this).find("td:eq(0)").text();
                StudentMarks.TotalMarks = $(this).find("td:eq(2)").text();
                StudentMarks.MarksObtained = $(this).find("td:eq(3)").text();
                StudentMarks.Percentage = $(this).find("td:eq(4)").text();
                listOfStudentMarks.push(StudentMarks);
            });

        objStudentViewModel.Name = $("#txtName").val();
        objStudentViewModel.ExamId = $("#ddExam").val();
        objStudentViewModel.ClassName = $("#txtClassName").val();
        objStudentViewModel.RollNumber = $("#txtRollNumber").val();

        objStudentViewModel.ListOfStudentMarks = listOfStudentMarks

        $.ajax({
            async: true,
            type: 'POST',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(objStudentViewModel),
            url: '/Home/Index',
            success: function (data) {
                if (data.status === true) {
                    alert(data.message);
                    ResetMarksDetailsAfterSaving();
                    LoadStudent();
                }
            },
            error: function () {
                alert("There is some problem to process your request.")
            }
        })
    }
</script>

<div class="container" style="margin-top: 10px;">
    <h2>Add New Student Details & Marks</h2>
    <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false">Add New Student Details</button>
</div>

<div id="myModal" class="modal fade" role="dialog" >
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Student Result</h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Name)
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "txtName" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ClassName)
                            @Html.TextBoxFor(model => model.ClassName, new { @class = "form-control", @id = "txtClassName" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.RollNumber)
                            @Html.TextBoxFor(model => model.RollNumber, new { @class = "form-control", @id = "txtRollNumber" })
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ExamId)
                            @Html.DropDownListFor(model => model.ExamId, Model.ListOfExams, new { @class = "form-control", @id = "ddExam" })
                        </div>
                    </div>
                    
                    <fieldset>
                        <legend>Student Marks</legend>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.SubjectId)
                            @Html.DropDownListFor(model => model.SubjectId, Model.ListOfSubjects, new { @class = "form-control", @id = "ddSubject" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.TotalMarks)
                            @Html.TextBoxFor(model => model.TotalMarks, new { @class = "form-control", @id = "txtTotalMarks", @style = "text-align: right" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.MarksObtained)
                            @Html.TextBoxFor(model => model.MarksObtained, new { @class = "form-control", @id = "txtMarksObtained", @style="text-align: right" })
                        </div>
                        <div class="form-group">
                            <input id="btnAddToList" style="float: right" type="button" name="addToList" value="Add To List" class="btn btn-primary" />
                        </div>
                        <table class="table table-condensed" style="width:100%" id="tableStudentMarks">
                            <thead>
                                <tr>
                                    <th>Sub ID</th>
                                    <th>Subject</th>
                                    <th>Total Marks</th>
                                    <th>Marks Obtained</th>
                                    <th>Percentage</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                        </table>
                    </fieldset>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSave" type="button" class="btn btn-success">Save</button>&nbsp;
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<fieldset style="margin:20px;">
    <legend>Student Details</legend>
    <table style="width: 100%" class="table table-bordered" id="tableLoadStudent">
        <thead>
            <tr>
                <th>Student Name</th>
                <th>Exam</th>
                <th>Class Name</th>
                <th>Roll Number</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
           @* @foreach (var item in Model.ListOfStudentModels)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.ExamName</td>
                    <td>@item.ClassName</td>
                    <td>@item.RollNumber</td>
                    <td>
                        <input type="button" value="Display Marks" name="details" onclick="StudentMarks(@item.StudentId)" class="btn btn-primary" />
                    </td>
                </tr>
            }*@
            
        </tbody>
    </table>
</fieldset>

<fieldset>
    <legend>Student Marks</legend>
    <div id="divStudentMarks">

    </div>
</fieldset>